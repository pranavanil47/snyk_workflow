#  File: .github/workflows/snyk-scan.yml
name: Snyk Security Scan

on:
  workflow_call:
    inputs:
      project-directory:
        description: 'Directory of the project to scan'
        required: true
        type: string
      snyk-token:
        description: 'Snyk authentication token'
        required: true
        type: string

jobs:
  snyk-scan:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v4

      # Set up Snyk CLI
      - name: Set up Snyk CLI
        uses: snyk/actions/setup@master
        with:
          snyk-version: latest
        env:
          SNYK_TOKEN: ${{ inputs.snyk-token }}

      # Snyk Code (SAST) scan
      - name: Snyk Code test
        continue-on-error: true
        run: snyk code test --json-file-output=snyk-code.json
        working-directory: ${{ inputs.project-directory }}
        env:
          SNYK_TOKEN: ${{ inputs.snyk-token }}

      # Snyk Open Source (SCA) scan
      - name: Snyk Open Source test
        continue-on-error: true
        run: snyk test --all-projects --json-file-output=snyk-oss.json
        working-directory: ${{ inputs.project-directory }}
        env:
          SNYK_TOKEN: ${{ inputs.snyk-token }}

      # Snyk Infrastructure as Code (IaC) scan
      - name: Snyk IaC test
        continue-on-error: true
        run: snyk iac test --report --json-file-output=snyk-iac.json
        working-directory: ${{ inputs.project-directory }}
        env:
          SNYK_TOKEN: ${{ inputs.snyk-token }}

      # Docker image build (if Dockerfile exists)
      - name: Build Docker image (if present)
        if: hashFiles('Dockerfile') != ''
        run: docker build -t temp-snyk-image ${{ inputs.project-directory }}

      # Snyk Container scan (if Dockerfile exists)
      - name: Snyk Container test (if Dockerfile exists)
        if: hashFiles('Dockerfile') != ''
        continue-on-error: true
        run: snyk container test temp-snyk-image --file=Dockerfile --json-file-output=snyk-container.json
        working-directory: ${{ inputs.project-directory }}
        env:
          SNYK_TOKEN: ${{ inputs.snyk-token }}

      # SSH Setup for upload
      - name: Setup SSH for Upload
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H 34.57.235.175 >> ~/.ssh/known_hosts

      # Upload JSON reports to VM
      - name: Upload JSON reports to VM
        if: always()
        run: |
          REMOTE_DIR="/home/pranavanil123/snyk"
          scp snyk-code.json pranavanil123@34.57.235.175:$REMOTE_DIR/ || true
          scp snyk-oss.json pranavanil123@34.57.235.175:$REMOTE_DIR/ || true
          scp snyk-iac.json pranavanil123@34.57.235.175:$REMOTE_DIR/ || true
          if [ -f snyk-container.json ]; then
            scp snyk-container.json pranavanil123@34.57.235.175:$REMOTE_DIR/
          fi

      # Cleanup SSH key
      - name: Cleanup
        if: always()
        run: rm -f ~/.ssh/id_rsa
